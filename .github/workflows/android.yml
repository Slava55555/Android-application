name: Android CI

on:
  push:
    branches: [ "master", "dev-*" ]
  pull_request:
    branches: [ "master", "dev-*" ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17, 21]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: gradle

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew assembleDebug assembleRelease
      
    - name: Run unit tests
      run: ./gradlew test
      
    - name: Run instrumentation tests
      run: ./gradlew connectedCheck
      continue-on-error: true  # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç —ç–º—É–ª—è—Ç–æ—Ä–∞
      
    - name: Run lint checks
      run: ./gradlew lintDebug
      
    - name: Verify APK files
      run: |
        APK_FILES=$(find . -name "*.apk" | wc -l)
        if [ $APK_FILES -gt 0 ]; then
          echo "Found $APK_FILES APK file(s)"
          find . -name "*.apk" -exec ls -la {} \;
        else
          echo "No APK files found - build failed"
          exit 1
        fi

    - name: Static analysis with SonarQube (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      run: ./gradlew sonarqube
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ matrix.java-version }}
        path: "**/*debug.apk"
        retention-days: 7

    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk-${{ matrix.java-version }}
        path: "**/*release.apk"
        retention-days: 14

  security-scan:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Run dependency vulnerability check
      run: ./gradlew dependencyCheckAnalyze
      continue-on-error: true
      
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: "**/build/reports/"
        retention-days: 30

  notify:
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: always()
    
    steps:
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üö® CI build failed! Please check the workflow run.'
          })
